{"version":3,"sources":["Views/HomePage/HomePage.jsx","Services/ApiService.jsx","images/no-image.jpeg","Components/MoviesTrendList/styles.module.scss","Components/MoviesTrendList/MoviesTrendList.jsx","Views/HomePage/styles.module.scss"],"names":["HomePage","state","movies","fetchPopularMovies","then","setState","catch","error","console","log","this","className","styles","title","MoviesTrendList","Component","apiKey","imageUrl","axios","get","response","data","results","fetchByQuery","query","fetchMovieDetails","moviesId","fetchMovieReviews","movieId","fetchMovieCast","cast","module","exports","withRouter","location","container","length","list","map","id","poster_path","item","link","to","pathname","from","src","alt","image","img","movie_title"],"mappings":"4QA6BeA,E,4MAtBXC,MAAQ,CACJC,OAAQ,I,uDAGZ,WAAoB,IAAD,OACfC,cAAqBC,MAAK,SAAAF,GAAM,OAAI,EAAKG,SAAS,CAACH,cAClDI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,oBAGhC,WAAS,IACGL,EAAWQ,KAAKT,MAAhBC,OAER,OACI,qCACA,oBAAIS,UAAWC,IAAOC,MAAtB,4BACA,cAACC,EAAA,EAAD,CAAiBZ,OAAQA,W,GAjBda,c,gCCLvB,iOACMC,EAAS,mCACTC,EAAW,kCAEXd,EAAqB,WACnB,OAAOe,IAAMC,IAAN,kEAAqEH,IAC3EZ,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,KAAKC,YAGlCC,EAAe,SAACC,GACnB,OAAON,IAAMC,IAAN,4DAA+DH,EAA/D,kBAA+EQ,IACpFpB,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,KAAKC,YAG9BG,EAAmB,SAACC,GACnB,OAAOR,IAAMC,IAAN,6CAAgDO,EAAhD,oBAAoEV,IACzEZ,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,SAG7BM,EAAoB,SAACC,GACnB,OAAOV,IAAMC,IAAN,6CAAgDS,EAAhD,4BAA2EZ,IACjFZ,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,KAAKC,YAGlCO,EAAiB,SAACD,GAChB,OAASV,IAAMC,IAAN,6CAAgDS,EAAhD,4BAA2EZ,IACnFZ,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,KAAKS,U,gCC1BzB,QAA0B,uC,mBCCzCC,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,YAAc,4BAA4B,KAAO,qBAAqB,IAAM,sB,6HC6B3MC,eAxBS,SAAC,GAAwB,IAAvB/B,EAAsB,EAAtBA,OAAQgC,EAAc,EAAdA,SAC9B,OAAQ,qBAAKvB,UAAWC,IAAOuB,UAAvB,SAELjC,EAAOkC,OAAS,GACf,oBAAIzB,UAAWC,IAAOyB,KAAtB,SAA6BnC,EAAOoC,KAAI,gBAAEzB,EAAF,EAAEA,MAAO0B,EAAT,EAASA,GAAIC,EAAb,EAAaA,YAAb,OAA8B,oBAAa7B,UAAWC,IAAO6B,KAA/B,SAClE,eAAC,IAAD,CAAM9B,UAAWC,IAAO8B,KAAMC,GAAI,CAChCC,SAAS,WAAD,OAAYL,GACpBtC,MAAO,CACL4C,KAAMX,IAHV,UAOCM,EAAe,qBAChBM,IAAK7B,IAAWuB,EAEhBO,IAAKlC,IACA,qBAAKiC,IAAKE,IACfrC,UAAWC,IAAOqC,IACpBF,IAAI,KACF,oBAAIpC,UAAWC,IAAOsC,YAAtB,SAAoCrC,QAfuC0B,c,mBCTvFR,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/home-page.2b45783c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport {fetchPopularMovies} from '../../Services/ApiService'\nimport MoviesTrendList from '../../Components/MoviesTrendList'\nimport styles from './styles.module.scss'\n\nclass HomePage extends Component{\n\n    state = {\n        movies: []\n    }\n\n    componentDidMount(){\n        fetchPopularMovies().then(movies => this.setState({movies}))\n        .catch(error => console.log(error))\n    }\n\n    render(){\n        const { movies } = this.state;\n       \n        return(\n            <>\n            <h1 className={styles.title} >Trending Today</h1>\n            <MoviesTrendList movies={movies}/>\n            </>\n            \n        )\n    }\n}\n\nexport default HomePage;","import axios from 'axios'\nconst apiKey = '98e87da0e762537a8cb63c18dd13caee';\nconst imageUrl = 'https://image.tmdb.org/t/p/w300'\n\nconst fetchPopularMovies = () => {\n        return axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`)\n        .then(response => response.data.results)\n}\n\nconst fetchByQuery = (query) =>{ \n   return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`)\n    .then(response => response.data.results)\n}\n\nconst fetchMovieDetails =(moviesId) => {\n       return axios.get(`https://api.themoviedb.org/3/movie/${moviesId}?api_key=${apiKey}`)\n        .then(response => response.data)\n}\n\nconst fetchMovieReviews = (movieId) => {\n        return axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`)\n        .then(response => response.data.results)\n}\n\nconst fetchMovieCast = (movieId) => {\n        return   axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`)\n        .then(response => response.data.cast)\n}\n\nexport  { fetchPopularMovies, fetchByQuery, fetchMovieDetails, fetchMovieReviews, fetchMovieCast, imageUrl};","export default __webpack_public_path__ + \"static/media/no-image.ac1b94f6.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__12mEV\",\"title\":\"styles_title___xmRI\",\"list\":\"styles_list__325Jn\",\"item\":\"styles_item__Q998E\",\"movie_title\":\"styles_movie_title__2Zp1T\",\"link\":\"styles_link__3b6RY\",\"img\":\"styles_img__3zA90\"};","import { Link, withRouter } from 'react-router-dom';\nimport {imageUrl} from '../../Services/ApiService';\nimport image from '../../images/no-image.jpeg'\nimport styles from './styles.module.scss';\n\n\nconst MoviesTrendList = ({movies, location}) => {\n    return( <div className={styles.container}> \n      \n      {movies.length > 0 &&   \n        <ul className={styles.list}>{movies.map(({title, id, poster_path}) => <li key={id} className={styles.item}>\n            <Link className={styles.link} to={{\n              pathname:`/movies/${id}`,\n              state: {\n                from: location,\n              }\n          }}>\n            \n            {poster_path ? (<img\n            src={imageUrl + poster_path}\n            \n            alt={title}\n          />) : (<img src={image}\n            className={styles.img}\n          alt='' />)}\n            <h3 className={styles.movie_title}>{title}</h3>\n            </Link>\n     </li>)}</ul>}</div> )\n}\n\nexport default withRouter(MoviesTrendList);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ehX1\"};"],"sourceRoot":""}