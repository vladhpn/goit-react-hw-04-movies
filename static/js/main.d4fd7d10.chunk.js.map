{"version":3,"sources":["Services/ApiService.jsx","images/no-image.jpeg","Components/MoviesTrendList/MoviesTrendList.jsx","Views/HomePage/HomePage.jsx","Components/SearchForm/SearchForm.jsx","Components/MoviesPageList/MoviesPageList.jsx","Views/MoviesPage/MoviesPage.jsx","Components/MovieDescription/MovieDescription.jsx","Components/Cast/Cast.jsx","Components/Review/Review.jsx","Components/Reviews/Reviews.jsx","Views/MoviesDetailsPage/MoviesDetailsPage.jsx","Views/NotFound/NotFound.jsx","routes.jsx","Components/Navigation/Navigation.jsx","Components/AppBar/AppBar.jsx","App.js","index.js"],"names":["apiKey","imageUrl","fetchByQuery","query","axios","get","then","response","data","results","MoviesTrendList","movies","length","map","title","id","poster_path","to","src","className","alt","image","HomePage","state","setState","catch","error","console","log","this","Component","SearchForm","handleChange","event","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","MoviesPageList","original_title","MoviesPage","onChangeQuery","MovieDescription","release_date","vote_average","overview","Cast","casts","movieId","cast","fetchMovieCast","name","profile_path","Review","author","content","Reviews","reviews","fetchMovieReviews","MoviesDetailsPage","moviesId","fetchMovieDetails","match","params","path","url","render","NotFound","Navigation","exact","routes","AppBar","App","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4fd7d10.chunk.js","sourcesContent":["import axios from 'axios'\nconst apiKey = '98e87da0e762537a8cb63c18dd13caee';\nconst imageUrl = 'https://image.tmdb.org/t/p/w300'\n\nconst fetchPopularMovies = () => {\n        return axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`)\n        .then(response => response.data.results)\n}\n\nconst fetchByQuery = (query) =>{ \n   return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`)\n    .then(response => response.data.results)\n}\n\nconst fetchMovieDetails =(moviesId) => {\n       return axios.get(`https://api.themoviedb.org/3/movie/${moviesId}?api_key=${apiKey}`)\n        .then(response => response.data)\n}\n\nconst fetchMovieReviews = (movieId) => {\n        return axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`)\n        .then(response => response.data.results)\n}\n\nconst fetchMovieCast = (movieId) => {\n        return   axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`)\n        .then(response => response.data.cast)\n}\n\nexport  { fetchPopularMovies, fetchByQuery, fetchMovieDetails, fetchMovieReviews, fetchMovieCast, imageUrl};","export default __webpack_public_path__ + \"static/media/no-image.ac1b94f6.jpeg\";","import { Link } from 'react-router-dom';\nimport {imageUrl} from '../../Services/ApiService';\nimport image from '../../images/no-image.jpeg'\n\n\nconst MoviesTrendList = ({movies}) => {\n    return( <div>{movies.length > 0 &&   \n        <ul>{movies.map(({title, id, poster_path}) => <li key={id}>\n            <Link to={`/movies/${id}`}>\n            <h3>{title}</h3>\n            {poster_path ? (<img\n            src={imageUrl + poster_path}\n            className=\"ImageGalleryItem-image\"\n            alt={title}\n          />) : (<img src={image}\n          alt='' />)}\n            \n            </Link>\n     </li>)}</ul>}</div> )\n}\n\nexport default MoviesTrendList;","import { Component } from 'react';\nimport {fetchPopularMovies} from '../../Services/ApiService'\nimport MoviesTrendList from '../../Components/MoviesTrendList'\n\nclass HomePage extends Component{\n\n    state = {\n        movies: []\n    }\n\n    componentDidMount(){\n        fetchPopularMovies().then(movies => this.setState({movies}))\n        .catch(error => console.log(error))\n    }\n\n    render(){\n        const { movies } = this.state;\n       \n        return(\n            <>\n            <h1>Trending Today</h1>\n            <MoviesTrendList movies={movies}/>\n            </>\n        )\n    }\n}\n\nexport default HomePage;","import { Component } from \"react\";\n\n\nclass SearchForm extends Component{\n  state = {\n    query: '',\n  }\n  handleChange = event => {\n    this.setState({query: event.currentTarget.value})\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.query)\n    this.setState({query: ''})\n    \n  }\n\n    render() {\n      const {query} = this.state;\n\n        return( \n          <>\n          <h2>Movies search</h2>\n          <div>\n            <form onSubmit={this.handleSubmit}>\n              <button type=\"submit\">\n              <span>Search</span>\n              </button>\n          \n              <input\n                value={query}\n                onChange={this.handleChange}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n              />\n            </form>\n            </div>\n             </>\n          )\n    }\n}\nexport default SearchForm;","import { Link } from 'react-router-dom';\nimport {imageUrl} from '../../Services/ApiService';\n\nconst MoviesPageList = ({movies}) =>{\n    return(<div>\n        <ul>{movies.map(({original_title, id, poster_path, title}) => <li key={id}>  \n            <Link to={`/movies/${id}`}><h3>{original_title}</h3>\n            <img\n              src={imageUrl + poster_path}\n              className=\"ImageGalleryItem-image\"\n              alt={title}\n            /></Link>\n       \n         </li>)}</ul>\n    </div>)\n}\n\nexport default MoviesPageList;","import { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport SearchForm from '../../Components/SearchForm'\nimport {fetchByQuery} from '../../Services/ApiService'\nimport MoviesPageList from '../../Components/MoviesPageList';\n\n\nclass MoviesPage extends Component{\n\n    state = {\n        movies: [],\n    }\n\n    onChangeQuery = query => {\n        fetchByQuery(query).then(movies => this.setState({movies}))\n        .catch(error => console.log(error))\n    }\n    render(){\n        const {movies} = this.state;\n        // const { url } = this.props.match;\n        return(<>\n        <SearchForm  onSubmit={this.onChangeQuery}/>\n        <MoviesPageList movies={movies}/>\n         </>\n        )\n    }\n}\n\nexport default MoviesPage;","import { imageUrl} from '../../Services/ApiService'\nconst MovieDescription = ({movies}) => {\n    return(<>\n        <img\n              src={imageUrl+ movies.poster_path}\n              className=\"ImageGalleryItem-image\"\n              alt={movies.title}\n              />\n\n            <h2>{movies.title} {movies.release_date}</h2>\n            <p>Rating: {movies.vote_average}</p>\n            <h3>Overview</h3>\n            <p>{movies.overview}</p>\n            <h3>Genres добавить</h3>\n            {/* {movies.genres.map(({id, name}) => <span key={id}>{name}</span>)}  */}\n    </>)\n}\n\nexport default MovieDescription;","import { Component } from \"react\";\nimport {fetchMovieCast} from '../../Services/ApiService'\n\n\nclass Cast extends Component{\n    state ={\n        casts: []\n    }\n\n    componentDidMount(){\n        const {movieId} = this.props\n        fetchMovieCast(movieId).then(casts => this.setState({casts}))\n        .catch(error => console.log(error))\n    }\n\n    render(){\n        const {casts} = this.state;\n        const baseUrl = 'https://image.tmdb.org/t/p/w200'\n        return(<><h1>CAST</h1>\n        <ul>{casts.map(({ name, id, profile_path }) => <li key={id}>\n        <img\n                src={baseUrl + profile_path}\n                className=\"ImageGalleryItem-image\"\n                alt={name}\n              />\n            <p>{name}</p></li>)}</ul>\n        </>)\n    }\n}\n\nexport default Cast;","\nconst Review = ( {author, content} ) => {\n    return(<>\n    <h4>{author}</h4>\n    <span>{content}</span>\n    </>)\n}\n\nexport default Review;","import { Component } from \"react\";\nimport Review from '../Review';\nimport {fetchMovieReviews} from '../../Services/ApiService'\n\n\nclass Reviews extends Component{\n    state = {\n        reviews: []\n    }\n\n    componentDidMount(){\n        const {movieId} = this.props\n        fetchMovieReviews(movieId).then(reviews => this.setState({reviews}))\n        .catch(error => console.log(error))\n    }\n\n    render(){\n        const {reviews} = this.state;\n\n        return(<>\n        <h2>Reviews</h2>\n        <ul>{reviews.map(({author, id, content}) => <li key={id}> \n            <Review author={author} content={content}/>\n        </li>)}</ul>\n        </>)\n    }\n}\n\nexport default Reviews;","import {Component} from 'react';\nimport {Route,Link} from 'react-router-dom';\nimport MovieDescription from '../../Components/MovieDescription'\nimport Cast from '../../Components/Cast'\nimport Reviews from '../../Components/Reviews'\nimport {fetchMovieDetails} from '../../Services/ApiService'\n\n\nclass MoviesDetailsPage extends Component{\n\n   state = {\n      movies: []\n    }\n\n    componentDidMount(){\n      const {moviesId} = this.props.match.params\n        fetchMovieDetails(moviesId).then(movies => this.setState({movies}))\n        .catch(error => console.log(error))\n    }\n\n    render() {\n      const {moviesId} = this.props.match.params\n      const {movies} = this.state;\n      const {match} = this.props\n      const { path } = this.props.match;\n          \n      return(<>\n\n          <MovieDescription movies={movies}/>\n             \n           <ul>\n               <li> <Link to={`${match.url}/cast`}> Cast </Link></li>\n               <li> <Link to={`${match.url}/reviews`}> Rewiews </Link></li>\n            </ul>\n\n          <Route\n            path={`${path}/cast`}\n            render={props => (<Cast {...props} movieId={moviesId}/>)}\n        />\n\n          <Route\n            path={`${path}/reviews`}\n            render={props => (<Reviews {...props} movieId={moviesId}/>)}\n        />\n           \n            </>)\n        }\n\n\n}\n\nexport default MoviesDetailsPage;","\nconst NotFound = () => {\n    return(<h1>Oops page not found</h1>);\n}\n\nexport default NotFound;","export default {\n    home: '/',\n    movies: '/movies',\n    moviesDetails: '/movies/:moviesId'\n}","import { NavLink} from 'react-router-dom';\nimport routes from '../../routes';\n\nconst Navigation = () => {\n    return(\n        <nav>\n         <NavLink exact to={routes.home}>\n            Home\n          </NavLink>\n          <NavLink to={routes.movies}>Movies</NavLink>\n          </nav>\n    )\n}\n\nexport default Navigation;","import Navigation from '../Navigation'\n\nconst AppBar = () => {\n    return(\n        <header>\n        <Navigation />\n          </header>\n    )\n}\n\nexport default AppBar;","import { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './Views/HomePage';\nimport MoviesPage from './Views/MoviesPage';\nimport MoviesDetailsPage from './Views/MoviesDetailsPage';\nimport NotFound from './Views/NotFound';\nimport AppBar from './Components/AppBar';\nimport routes from './routes';\nimport 'modern-normalize/modern-normalize.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Switch>\n          <Route exact path={routes.home} component={HomePage} />\n          <Route exact path={routes.movies} component={MoviesPage} />\n          <Route path={routes.moviesDetails} component={MoviesDetailsPage} />\n          <Route component={NotFound} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}